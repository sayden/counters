---
import config from 'virtual:starlight/user-config';

import LanguageSelect from 'virtual:starlight/components/LanguageSelect';
import Search from './Search.astro';
import SiteTitle from './SiteTitle.astro';
import SocialIcons from 'virtual:starlight/components/SocialIcons';
import ThemeSelect from 'virtual:starlight/components/ThemeSelect';

/**
 * Render the `Search` component if Pagefind is enabled or the default search component has been overridden.
 */
const shouldRenderSearch =
	config.pagefind || config.components.Search !== '@astrojs/starlight/components/Search.astro';
---

<div class="header" style="height: 100%">
	<div class="title-wrapper sl-flex">
		<SiteTitle />
	</div>
	<div class="sl-flex print:hidden">
		{shouldRenderSearch && <Search />}
	</div>
	<div class="sl-hidden md:sl-flex print:hidden right-group">
		<div class="sl-flex social-icons">
			<SocialIcons />
		</div>
		<LanguageSelect />
	</div>
</div>

<style>
	@layer starlight.core {
		.header {
			display: flex;
			gap: var(--sl-nav-gap);
			align-items: center;
		}


		.right-group,
		.social-icons {
			gap: 1rem;
			align-items: center;
		}

		@media (min-width: 50rem) {
			:global(:root[data-has-sidebar]) {
				--__sidebar-pad: calc(2 * var(--sl-nav-pad-x));
			}
			:global(:root:not([data-has-toc])) {
				--__toc-width: 0rem;
			}
			.header {
				--__sidebar-width: max(0rem, var(--sl-content-inline-start, 0rem) - var(--sl-nav-pad-x));
				--__main-column-fr: calc(
					(
							100% + var(--__sidebar-pad, 0rem) - var(--__toc-width, var(--sl-sidebar-width)) -
								(2 * var(--__toc-width, var(--sl-nav-pad-x))) - var(--sl-content-inline-start, 0rem) -
								var(--sl-content-width)
						) / 2
				);
				display: grid;
				grid-template-columns:
        /* 1 (site title): runs up until the main content columnâ€™s left edge or the width of the title, whichever is the largest  */
					minmax(
						calc(var(--__sidebar-width) + max(0rem, var(--__main-column-fr) - var(--sl-nav-gap))),
						auto
					)
					/* 2 (search box): all free space that is available. */
					1fr
					/* 3 (right items): use the space that these need. */
					auto;
				align-content: center;
			}
		}
	}
</style>

